{"version":3,"sources":["App/Form/StopSelector/StopSelector.tsx","App/Form/Form.tsx","Util/time.ts","Util/stop.ts","App/Results/JourneyResult/LegResult/StopTimeResult/StopTimeResult.tsx","App/Results/JourneyResult/LegResult/LegResult.tsx","App/Results/JourneyResult/JourneyResult.tsx","App/Results/Results.tsx","serviceWorker.ts","Config/local.ts","Config/production.ts","Container/Container.ts","index.tsx","App/App.tsx"],"names":["Autosuggest","require","StopSelector","_ref","id","stops","value","onChange","_useState","useState","data","_useState2","Object","slicedToArray","suggestions","setSuggestions","_useState3","_useState4","inputValue","setInputValue","react_default","a","createElement","className","highlightFirstSuggestion","getSuggestionValue","renderSuggestion","onSuggestionsFetchRequested","_ref4","trim","toUpperCase","inputLength","length","results","filter","l","code","name","startsWith","onSuggestionsClearRequested","onSuggestionSelected","event","_ref2","suggestion","inputProps","placeholder","_ref3","newValue","Form","onSubmit","origin","setOrigin","destination","setDestination","_useState5","Date","_useState6","date","setDate","_useState7","_useState8","time","setTime","useEffect","react","StopSelector_StopSelector","toJSON","slice","e","target","type","toTimeString","seconds","hours","Math","floor","hoursPad","mins","stopNames","reduce","index","stop","stopName","stopId","StopTimeResult","stopTime","dropOff","arrivalTime","departureTime","LegResult","leg","transferText","duration","stopTimes","st","pickUp","map","i","key","JourneyResult","items","journey","_firstAndLast","legs","_firstAndLast2","fLeg","lLeg","Results","loading","j","Boolean","window","location","hostname","match","local","apiBaseUrl","production","Container","classCallCheck","this","createClass","Axios","create","baseURL","config","get","process","ENV","container","ReactDOM","render","api","setResults","setLoading","_onFormSubmit","asyncToGenerator","regenerator_default","mark","_callee","form","params","response","wrap","_context","prev","next","entries","kv","join","sent","journeys","apply","arguments","Form_Form","_x","getApi","getStops","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.18ee7130.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './StopSelector.css';\n\nconst Autosuggest = require(\"react-autosuggest\");\n\nexport function StopSelector({ id, value, stops, onChange }: StopSelectorProps) {\n  const [suggestions, setSuggestions] = useState(stops.data);\n  const [inputValue, setInputValue] = useState('');\n\n  const onSelectedChange = (event: any, { suggestion }: any) => {\n    onChange(suggestion.id);\n  };\n\n  const onInputChange = (event: any, { newValue }: any) => {\n    setInputValue(newValue);\n  };\n\n  const onSuggestionsFetchRequested = ({ value } : any) => {\n    const inputValue = value.trim().toUpperCase();\n    const inputLength = inputValue.length;\n    const results = inputLength < 3 ? [] : stops.data.filter(l =>\n      (inputLength <= 4 && inputValue === l.code) || l.name.toUpperCase().startsWith(inputValue)\n    );\n\n    setSuggestions(results);\n  };\n\n  const onSuggestionsClearRequested = () => {\n    setSuggestions(stops.data);\n  };\n\n  return (\n    <div className=\"col-3\">\n      <Autosuggest\n        highlightFirstSuggestion={true}\n        suggestions={suggestions}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={onSuggestionsClearRequested}\n        onSuggestionSelected={onSelectedChange}\n        inputProps={{\n          value: inputValue,\n          id: id,\n          placeholder: id,\n          onChange: onInputChange\n        }}\n      />\n    </div>\n  );\n}\n\nfunction getSuggestionValue(suggestion: Stop) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion: Stop) {\n  return (\n    <span>{suggestion.name}</span>\n  );\n}\n\nexport interface StopData {\n  data: Stop[]\n}\n\nexport interface Stop {\n  name: string,\n  description: string,\n  longitude: string,\n  latitude: string,\n  id: string,\n  code: string\n}\n\nexport interface StopSelectorProps {\n  id: string,\n  value: string,\n  stops: StopData,\n  onChange: (value: string) => any\n}\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { StopData, StopSelector } from \"./StopSelector/StopSelector\";\n\nimport \"./Form.css\";\n\nexport function Form({ onSubmit, stops }: FormInputProps) {\n  const [origin, setOrigin] = useState(\"\");\n  const [destination, setDestination] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [time, setTime] = useState(\"0600\");\n\n  useEffect(() => {\n    if (origin.length > 2 && destination.length > 2 && time.length === 4) {\n      onSubmit({ origin, destination, date, time });\n    }\n  }, [origin, destination, date, time]);\n\n  return (\n    <div className=\"row Form\">\n      <StopSelector id=\"origin\" value={origin} onChange={setOrigin} stops={stops} />\n      <StopSelector id=\"destination\" value={destination} onChange={setDestination} stops={stops} />\n      <div className=\"col-3\">\n        <input placeholder=\"date\" value={date.toJSON().slice(0, 10)} onChange={e => setDate(new Date(e.target.value))} name=\"date\" type=\"date\"/>\n      </div>\n      <div className=\"col-3\">\n        <input placeholder=\"time\" value={time} onChange={e => setTime(e.target.value)} name=\"time\" type=\"text\"/>\n      </div>\n    </div>\n  )\n}\n\nexport interface FormInputProps {\n  onSubmit: (form: FormData) => any,\n  stops: StopData\n}\n\nexport interface FormData {\n  origin: string,\n  destination: string,\n  date: Date,\n  time: string\n}\n","\nexport function toTimeString(seconds: number) {\n  const hours = Math.floor(seconds / 3600);\n  const hoursPad = hours < 10 ? \"0\" : \"\";\n  const mins = Math.floor((seconds % 3600) / 60);\n  const minsPad = mins < 10 ? \"0\" : \"\";\n\n  return hoursPad + hours + \":\" + minsPad + mins;\n}\n\nexport function toMins(seconds: number) {\n  return Math.floor(seconds / 60) + \" mins\";\n}\n","\nimport * as stops from \"../Data/stops.json\";\n\nconst stopNames: Record<string, string> = stops.data.reduce((index, stop) => {\n  index[stop.id] = stop.name;\n\n  return index;\n}, {} as Record<string, string>);\n\nexport function stopName(stopId: string): string {\n  return stopNames[stopId];\n}\n","\nimport * as React from \"react\";\nimport { toTimeString } from \"../../../../../Util/time\";\nimport { stopName } from \"../../../../../Util/stop\";\n\nexport function StopTimeResult({ stopTime }: StopTimeResultProps) {\n  return (\n    <li>\n      {stopTime.dropOff ? toTimeString(stopTime.arrivalTime) : toTimeString(stopTime.departureTime) }\n      {\" \" + stopName(stopTime.stop)}\n    </li>\n  );\n}\n\nexport interface StopTimeResultProps {\n  stopTime: StopTime\n}\n\nexport interface StopTime {\n  stop: string,\n  departureTime: number,\n  arrivalTime: number,\n  pickUp: boolean,\n  dropOff: boolean\n}\n","\nimport * as React from \"react\";\nimport { StopTime, StopTimeResult } from \"./StopTimeResult/StopTimeResult\";\nimport { stopName } from \"../../../../Util/stop\";\nimport { toMins } from \"../../../../Util/time\";\n\nexport function LegResult({ index, leg }: LegResultProps) {\n  const transferText = leg.duration ? \"(\" + toMins(leg.duration) + \" transfer)\": \"\"\n  ;\n  return (\n    <div>\n      <h3>Leg {index + 1}: {stopName(leg.origin)} - {stopName(leg.destination)} {transferText}</h3>\n      <ul>\n        { leg.stopTimes\n          && leg.stopTimes\n            .filter(st => st.dropOff || st.pickUp)\n            .map((st, i) => <StopTimeResult key={i} stopTime={st} />)}\n      </ul>\n    </div>\n  );\n}\n\nexport interface LegResultProps {\n  leg: Leg,\n  index: number\n}\n\nexport interface Leg {\n  origin: string,\n  destination: string,\n  stopTimes: StopTime[]\n  duration?: number\n}\n","\nimport * as React from \"react\";\nimport { Leg, LegResult } from \"./LegResult/LegResult\";\nimport { toTimeString } from \"../../../Util/time\";\nimport { stopName } from \"../../../Util/stop\";\n\nexport function JourneyResult({ journey }: JourneyResultProps) {\n  const [fLeg, lLeg] = firstAndLast(journey.legs);\n\n  return (\n    <div>\n      <h2>\n        {stopName(fLeg.origin)} ({toTimeString(journey.departureTime)}) - ({toTimeString(journey.arrivalTime)}) {stopName(lLeg.destination)}\n      </h2>\n      <div>\n        {journey.legs.map((l, i) => <LegResult index={i} key={i} leg={l}/>)}\n      </div>\n    </div>\n  )\n}\n\nexport interface JourneyResultProps {\n  journey: Journey\n}\n\nexport interface Journey {\n  legs: Leg[],\n  departureTime: number,\n  arrivalTime: number\n}\n\nfunction firstAndLast<T>(items: T[]): [T, T] {\n  return [items[0], items[items.length - 1]];\n}\n\n","import * as React from \"react\";\nimport { JourneyResult } from \"./JourneyResult/JourneyResult\";\n\nexport function Results({ results, loading }: FormResultsProps) {\n  return (\n    <div>\n      <h1>Results</h1>\n      <div>{\n        loading\n          ? \"Loading\"\n          : results.length === 0\n            ? \"No results\"\n            : results.map((j, i) => <JourneyResult key={i} journey={j} />)\n      }</div>\n    </div>\n  );\n}\n\nexport interface FormResultsProps {\n  results: any[],\n  loading: boolean\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport const local = {\n  apiBaseUrl: \"http://localhost:8008/\"\n};\n","\nexport const production = {\n  apiBaseUrl: \"https://api.one-way.to/\"\n};\n","import Axios, { AxiosInstance } from \"axios\";\nimport { Config } from \"../Config/config\";\nimport { local } from \"../Config/local\";\nimport { production } from \"../Config/production\";\nimport { StopData } from \"../App/Form/StopSelector/StopSelector\";\nimport stops from \"../Data/stops.json\";\n\nexport class Container {\n\n  public getApi(): AxiosInstance {\n    return Axios.create({\n      baseURL: this.config.apiBaseUrl\n    });\n  }\n\n  public get config(): Config {\n    switch (process.env.ENV) {\n      case \"local\": return local;\n      default: return production;\n    }\n  }\n\n  public getStops(): StopData {\n    return stops;\n  }\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Container } from \"./Container/Container\";\n\nimport \"bootstrap/dist/css/bootstrap-grid.min.css\"\n\nconst container = new Container();\n\nReactDOM.render(<App api={container.getApi()} stops={container.getStops()}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as React from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { Form, FormData } from \"./Form/Form\";\nimport { useState } from \"react\";\nimport { Results } from \"./Results/Results\";\nimport \"./App.css\";\nimport { StopData } from \"./Form/StopSelector/StopSelector\";\n\nexport function App({ api, stops }: AppProps) {\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  async function onFormSubmit(form: FormData) {\n    setLoading(true);\n\n    const params = Object\n      .entries(form)\n      .map(kv => kv.join(\"=\"))\n      .join(\"&\");\n\n    const response = await api(\"/jp?\" + params);\n\n    setResults(response.data.data.journeys);\n    setLoading(false);\n  }\n\n  return (\n    <div className=\"container App\">\n      <Form onSubmit={onFormSubmit} stops={stops}/>\n      <Results results={results} loading={loading}/>\n    </div>\n  )\n}\n\nexport interface AppProps {\n  api: AxiosInstance,\n  stops: StopData\n}\n"],"sourceRoot":""}